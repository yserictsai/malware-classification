# Before data preprocessing
import os 
script_dir = os.getcwd()

sns.set(style="white", color_codes=True)
for i in col_ll:
    plt.figure() 
    sns.boxplot(x="Label", y=str(i), data=training_data)
    plt.title(str(i))
    plt.savefig(str(script_dir)+'/plot/'+str(i))
    plt.show()

sns.set(style="white", color_codes=True)
for i in col_ll:
    plt.figure() 
    sns.violinplot(x="Label", y=str(i), data=training_data, size=6)
    plt.title(str(i))
    plt.savefig(str(script_dir)+'/plot/'+str(i))
    plt.show()

for i in col_ll:
    plt.figure()
    sns.FacetGrid(training_data, hue="Label", size=6) \
    .map(sns.kdeplot, str(i)) \
    .add_legend()
    plt.title(str(i))
    plt.savefig(str(script_dir)+'/plot/'+str(i))
    plt.show()






# PCA
from sklearn.decomposition import PCA

X = training_data.drop(['FileID','Label'],1)
y = training_data['Label']


pca = PCA(n_components=2)
X_pca = pca.fit(X).transform(X)

plt.figure()
colors = ['navy', 'turquoise']
lw = 2

for color, i in zip(colors, [0, 1]):
    plt.scatter(X_pca[y == i, 0], X_pca[y == i, 1], color=color, alpha=.8, lw=lw)
                
plt.title('PCA')
plt.show()
